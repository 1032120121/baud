syntax = "proto3";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

import "github.com/tiglabs/baud/proto/metapb/meta.proto";

option go_package = "pspb";

option optimize_for = SPEED;
option (gogoproto.marshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.gostring_all) = true;
option (gogoproto.equal_all) = true;
option (gogoproto.verbose_equal_all) = false;
option (gogoproto.goproto_stringer_all) = false;
option (gogoproto.stringer_all) =  true;
option (gogoproto.populate_all) = true;
option (gogoproto.testgen_all) = false;
option (gogoproto.benchgen_all) = false;
option (gogoproto.goproto_getters_all) = false;

service ApiGrpc {
    rpc Index (IndexRequest) returns (IndexResponse) {}
}

enum RequestContentType {
    JSON = 0;
}

enum WriteResult {
    CREATED = 0;
    UPDATED = 1;
    DELETED = 2;
}

message ActionRequestHeader {
    uint32  space_id      = 1 [(gogoproto.customname) = "SpaceID", (gogoproto.casttype) = "SpaceID"];
    uint32  partition_id  = 2 [(gogoproto.customname) = "PartitionID", (gogoproto.casttype) = "PartitionID"];
}

message IndexRequest {
    ActionRequestHeader header      = 1 [(gogoproto.nullable) = false, (gogoproto.embed) = true];
    bytes               source      = 2;
    RequestContentType  content_ype = 3;
}

message IndexResponse {
    ResponseHeader header = 1 [(gogoproto.nullable) = false, (gogoproto.embed) = true];
    string         id     = 2;
    WriteResult    result = 3;
}