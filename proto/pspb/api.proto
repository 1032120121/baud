syntax = "proto3";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

option go_package = "pspb";

option optimize_for = SPEED;
option (gogoproto.marshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.gostring_all) = false;
option (gogoproto.equal_all) = true;
option (gogoproto.verbose_equal_all) = false;
option (gogoproto.goproto_stringer_all) = false;
option (gogoproto.stringer_all) =  true;
option (gogoproto.populate_all) = true;
option (gogoproto.testgen_all) = false;
option (gogoproto.benchgen_all) = false;
option (gogoproto.goproto_getters_all) = false;

enum OpType{
    // Creates the resource. If there is an existing document with the id, then it won't be removed.
    CREATE   = 0;
    // Updates a document. If there an existing document with the id, it will be replaced.
    UPDATE   = 1;
    // Deletes a document
    DELETE   = 2;
}

enum WriteResult {
    CREATED   = 0;
    UPDATED   = 1;
    DELETED   = 2;
    NOT_FOUND = 3;
    NOOP      = 4;
}

message RequestUnion {
    OpType          op_type = 1;
    CreateRequest   create  = 2;
    UpdateRequest   update  = 3;
    DeleteRequest   delete  = 4;
}

message ResponseUnion {
    OpType          op_type = 1;
    CreateResponse  create  = 2;
    UpdateResponse  update  = 3;
    DeleteResponse  delete  = 4;
    Failure         failure = 5;
}


message CreateRequest {
    bytes id    = 1 [(gogoproto.customname) = "ID", (gogoproto.casttype) = "github.com/tiglabs/baudengine/proto/metapb.Key"];
    bytes data  = 2 [(gogoproto.casttype) = "github.com/tiglabs/baudengine/proto/metapb.Value"];
}

message CreateResponse {
    bytes        id     = 1 [(gogoproto.customname) = "ID", (gogoproto.casttype) = "github.com/tiglabs/baudengine/proto/metapb.Key"];
    WriteResult  result = 2;
}

message UpdateRequest {
    bytes id     = 1 [(gogoproto.customname) = "ID", (gogoproto.casttype) = "github.com/tiglabs/baudengine/proto/metapb.Key"];
    bytes data   = 2 [(gogoproto.casttype) = "github.com/tiglabs/baudengine/proto/metapb.Value"];
    bool  upsert = 3;
}

message UpdateResponse {
    bytes          id     = 1 [(gogoproto.customname) = "ID", (gogoproto.casttype) = "github.com/tiglabs/baudengine/proto/metapb.Key"];
    WriteResult    result = 2;
}

message DeleteRequest {
    bytes          id     = 1 [(gogoproto.customname) = "ID", (gogoproto.casttype) = "github.com/tiglabs/baudengine/proto/metapb.Key"];
}

message DeleteResponse {
    bytes          id     = 1 [(gogoproto.customname) = "ID", (gogoproto.casttype) = "github.com/tiglabs/baudengine/proto/metapb.Key"];
    WriteResult    result = 2;
}

message Failure {
    option (gogoproto.goproto_stringer) = false;

    bytes  id      = 1 [(gogoproto.customname) = "ID", (gogoproto.casttype) = "github.com/tiglabs/baudengine/proto/metapb.Key"];
    string cause   = 2;
}
