syntax = "proto3";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

import "meta.proto";

option go_package = "metapb";

option optimize_for = SPEED;
option (gogoproto.marshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.gostring_all) = false;
option (gogoproto.equal_all) = true;
option (gogoproto.verbose_equal_all) = false;
option (gogoproto.goproto_stringer_all) = false;
option (gogoproto.stringer_all) =  true;
option (gogoproto.populate_all) = true;
option (gogoproto.testgen_all) = false;
option (gogoproto.benchgen_all) = false;
option (gogoproto.goproto_getters_all) = false;

message RequestHeader {
    string req_id = 1;
}

message ResponseHeader {
    string req_id  = 1;
    uint32 code    = 2 [(gogoproto.casttype) = "RespCode"];
    string message = 3;
    Error  error   = 4 [(gogoproto.nullable) = false];
}

message NotLeader {
    uint32 partition_id   = 1 [(gogoproto.customname) = "PartitionID", (gogoproto.casttype) = "PartitionID"];
    uint32 node_id        = 2 [(gogoproto.customname) = "NodeID", (gogoproto.casttype) = "NodeID"];
    string node_addr      = 3;
    PartitionEpoch  epoch = 4 [(gogoproto.nullable) = false];
}

message NoLeader {
    uint32 partition_id   = 1 [(gogoproto.customname) = "PartitionID", (gogoproto.casttype) = "PartitionID"];
}

message PartitionNotFound {
    uint32 partition_id   = 1 [(gogoproto.customname) = "PartitionID", (gogoproto.casttype) = "PartitionID"];
}

message MsgTooLarge {
    uint32 partition_id  = 1 [(gogoproto.customname) = "PartitionID", (gogoproto.casttype) = "PartitionID"];
    uint64 msg_size      = 2;
}

message Error {
    option (gogoproto.onlyone) = true;

    NotLeader not_leader                   = 1;
    NoLeader  no_leader                    = 2;
    PartitionNotFound partition_not_found  = 3;
    MsgTooLarge msg_too_large              = 4;
}
